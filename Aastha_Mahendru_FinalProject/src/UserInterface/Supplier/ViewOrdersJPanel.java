/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;

import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Order.ShippedOrders;
import Business.Organization.SupplierOrganization;
import Business.RequestQueue.Request;
import Business.RequestQueue.SupplierOrderRequest;
import java.awt.CardLayout;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aastha
 */
public class ViewOrdersJPanel extends javax.swing.JPanel {

    JPanel upc;
    SupplierOrganization supplierOrg;

    /**
     * Creates new form ViewOrdersJPanel
     */
    public ViewOrdersJPanel(JPanel upc, SupplierOrganization supplierOrg) {
        initComponents();
        this.upc = upc;
        this.supplierOrg = supplierOrg;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) orderJTable.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[3];
        for (Request req : supplierOrg.getRequestQueue().getWorkRequestList()) {
            SupplierOrderRequest sor = (SupplierOrderRequest) req;
            Order o = sor.getOrder();
            row[0] = o;
            row[1] = o.getWarehouse();
            row[2] = o.getStatus();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        viewOrderPaymentJButton = new javax.swing.JButton();
        backJButton2 = new javax.swing.JButton();
        approveJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Warehouse", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderJTable);
        if (orderJTable.getColumnModel().getColumnCount() > 0) {
            orderJTable.getColumnModel().getColumn(0).setResizable(false);
            orderJTable.getColumnModel().getColumn(1).setResizable(false);
            orderJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 79, -1, 229));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("View Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 24, -1, -1));

        viewOrderPaymentJButton.setText("View Order & Payment>>");
        viewOrderPaymentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderPaymentJButtonActionPerformed(evt);
            }
        });
        add(viewOrderPaymentJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 326, -1, -1));

        backJButton2.setText("<<Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });
        add(backJButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 537, -1, -1));

        approveJButton.setText("Approve & Ship Order");
        approveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButtonActionPerformed(evt);
            }
        });
        add(approveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 326, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);

        // for (OrderItem oi : order.getListOfItemsOrdered()) {
        //   oi.getProduct().setAvailability(oi.getQuantity() + oi.getProduct().getAvailability());
        //}
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void viewOrderPaymentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderPaymentJButtonActionPerformed
        int selectedRow = orderJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        Order o = (Order) orderJTable.getValueAt(selectedRow, 0);
        ViewOrderDetailsJPanel vodjp = new ViewOrderDetailsJPanel(upc, o);
        upc.add("ViewOrderItemJPanel", vodjp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);

    }//GEN-LAST:event_viewOrderPaymentJButtonActionPerformed

    private void approveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButtonActionPerformed
        int selectedRow = orderJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        Order o = (Order) orderJTable.getValueAt(selectedRow, 0);
        o.setStatus("Shipped");
        ShippedOrders s = new ShippedOrders(o, Calendar.getInstance(), supplierOrg);
        populateTable();
    }//GEN-LAST:event_approveJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveJButton;
    private javax.swing.JButton backJButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderJTable;
    private javax.swing.JButton viewOrderPaymentJButton;
    // End of variables declaration//GEN-END:variables
}
