/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminWorkArea;

import Business.InventoryRecords.SurgeryProcedure;
import Business.InventoryRecords.SurgeryProcedureDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aastha
 */
public class ViewSurgeryProceduresJPanel extends javax.swing.JPanel {

    JPanel upc;
    SurgeryProcedureDirectory spd;

    /**
     * Creates new form ViewSurgeryProceduresJPanel
     */
    public ViewSurgeryProceduresJPanel(JPanel upc, SurgeryProcedureDirectory spd) {
        initComponents();
        this.upc = upc;
        this.spd = spd;

        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) surgeriesJTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[2];

        for (SurgeryProcedure sp : spd.getListOfSurgeries()) {
            row[0] = sp.getId();
            row[1] = sp;
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        surgeriesJTable = new javax.swing.JTable();
        viewSurgeryJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        surgeriesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Surgery ID", "Surgery Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(surgeriesJTable);
        if (surgeriesJTable.getColumnModel().getColumnCount() > 0) {
            surgeriesJTable.getColumnModel().getColumn(0).setResizable(false);
            surgeriesJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 79, 525, 338));

        viewSurgeryJButton.setText("View Surgery Devices and Rooms>>");
        viewSurgeryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSurgeryJButtonActionPerformed(evt);
            }
        });
        add(viewSurgeryJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 488, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Surgery Procedure Directory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 22, -1, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 430, -1, -1));

        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });
        add(removeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewSurgeryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSurgeryJButtonActionPerformed
        int selectedRow = (int) surgeriesJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        SurgeryProcedure sp = (SurgeryProcedure) surgeriesJTable.getValueAt(selectedRow, 1);
        ViewSurgeryDetailsJPanel vsdjp = new ViewSurgeryDetailsJPanel(upc, sp);
        upc.add("viewsurgeryprocedures", vsdjp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_viewSurgeryJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        int selectedRow = (int) surgeriesJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this surgery procedure?", "Warning", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            SurgeryProcedure sp = (SurgeryProcedure) surgeriesJTable.getValueAt(selectedRow, 1);
            spd.getListOfSurgeries().remove(sp);

        }
    }//GEN-LAST:event_removeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeJButton;
    private javax.swing.JTable surgeriesJTable;
    private javax.swing.JButton viewSurgeryJButton;
    // End of variables declaration//GEN-END:variables
}
