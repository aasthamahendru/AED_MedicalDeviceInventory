/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminWorkArea;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aastha
 */
public class ManageHospitalsJPanel extends javax.swing.JPanel {

    JPanel upc;
    Network network;
    HospitalEnterprise hospitalEnterprise;

    /**
     * Creates new form ManageHospitalsJPanel
     */
    public ManageHospitalsJPanel(JPanel upc, Network network) {
        initComponents();
        this.upc = upc;
        this.network = network;

        populateTable();

    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) hospitalsJTable.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[4];

        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof HospitalEnterprise) {
                hospitalEnterprise = (HospitalEnterprise) e;
                for (Organization horg : e.getOrganizationDirectory().getOrganizationList()) {
                    HospitalOrganization temphorg = (HospitalOrganization) horg;
                    row[0] = temphorg.getOrganizationID();
                    row[1] = temphorg;
                    row[2] = temphorg.getAddress();
                    row[3] = temphorg.getContactno();

                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        addJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        newHospitalNameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        manageEmployeesJButton = new javax.swing.JButton();
        manageRoomsJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        addressJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        contactJTextField = new javax.swing.JTextField();

        jLabel6.setText("jLabel6");

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hospitalsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name", "Address", "Contatct No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalsJTable);
        if (hospitalsJTable.getColumnModel().getColumnCount() > 0) {
            hospitalsJTable.getColumnModel().getColumn(0).setResizable(false);
            hospitalsJTable.getColumnModel().getColumn(1).setResizable(false);
            hospitalsJTable.getColumnModel().getColumn(2).setResizable(false);
            hospitalsJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 636, 98));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Hospitals");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, -1, -1));

        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });
        add(removeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 510, -1, -1));

        jLabel2.setText("Enter Hospital Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, -1, -1));
        add(newHospitalNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 160, -1));

        jLabel3.setText("Add New Hospital:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 290, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 284, 17, 154));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 268, 636, 10));

        manageEmployeesJButton.setText("Manage Hospital Employees>>");
        manageEmployeesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeesJButtonActionPerformed(evt);
            }
        });
        add(manageEmployeesJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 311, -1, -1));

        manageRoomsJButton.setText("Manage Surgery Rooms>>");
        manageRoomsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageRoomsJButtonActionPerformed(evt);
            }
        });
        add(manageRoomsJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 361, 181, -1));

        jLabel4.setText("Address:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, -1, -1));

        addressJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressJTextFieldActionPerformed(evt);
            }
        });
        add(addressJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 160, -1));

        jLabel5.setText("Contact No.:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, -1, -1));
        add(contactJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 160, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        boolean isPresent = false;
        try {
            String hname = newHospitalNameJTextField.getText();
            String address = addressJTextField.getText();
            long contact = Long.parseLong(contactJTextField.getText());

            for (Organization o : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof HospitalOrganization) {
                    HospitalOrganization hosp = (HospitalOrganization) o;

                    if (hosp.getHospitalName().equals(hname)) {
                        isPresent = true;
                        break;
                    }
                }
            }

            if (isPresent == false) {
                Organization horg = hospitalEnterprise.getOrganizationDirectory().createOrganization(Organization.Type.Hospital);
                HospitalOrganization newhorg = (HospitalOrganization) horg;
                newhorg.setHospitalName(hname);
                newhorg.setContactno(contact);
                newhorg.setAddress(address);
                populateTable();
                JOptionPane.showMessageDialog(null, "Hospital has been added.");
            } else {
                JOptionPane.showMessageDialog(null, "Hospital already exists");
                return;
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid information.");
            return;
        }

    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        int selectedRow = (int) hospitalsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this hospital?", "Warning", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            HospitalOrganization horg = (HospitalOrganization) hospitalsJTable.getValueAt(selectedRow, 1);
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof HospitalEnterprise) {
                    e.getOrganizationDirectory().getOrganizationList().remove(horg);

                }
            }
        }
        populateTable();
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void manageEmployeesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeesJButtonActionPerformed
        if (!hospitalEnterprise.getOrganizationDirectory().getOrganizationList().isEmpty()) {
            ManageHospitalEmployeesJPanel mhejp = new ManageHospitalEmployeesJPanel(upc, network);
            upc.add("managehospitalemployees", mhejp);
            CardLayout layout = (CardLayout) upc.getLayout();
            layout.next(upc);
        } else {
            JOptionPane.showMessageDialog(null, "Please add a hospital first.");
            return;
        }
    }//GEN-LAST:event_manageEmployeesJButtonActionPerformed

    private void manageRoomsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageRoomsJButtonActionPerformed
        if (!hospitalEnterprise.getOrganizationDirectory().getOrganizationList().isEmpty()) {
            ManageHospitalRoomsJPanel mhrjp = new ManageHospitalRoomsJPanel(upc, network);
            upc.add("managehospitalrooms", mhrjp);
            CardLayout layout = (CardLayout) upc.getLayout();
            layout.next(upc);
        } else {
            JOptionPane.showMessageDialog(null, "Please add a hospital first.");
            return;
        }

    }//GEN-LAST:event_manageRoomsJButtonActionPerformed

    private void addressJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressJTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JTextField addressJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField contactJTextField;
    private javax.swing.JTable hospitalsJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton manageEmployeesJButton;
    private javax.swing.JButton manageRoomsJButton;
    private javax.swing.JTextField newHospitalNameJTextField;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeJButton;
    // End of variables declaration//GEN-END:variables
}
