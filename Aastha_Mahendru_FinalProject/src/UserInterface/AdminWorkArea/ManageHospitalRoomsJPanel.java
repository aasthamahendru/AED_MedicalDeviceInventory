/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminWorkArea;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.InventoryEnterprise;
import Business.InventoryRecords.SurgeryRoom;
import Business.Network.Network;
import Business.Organization.HospitalOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aastha
 */
public class ManageHospitalRoomsJPanel extends javax.swing.JPanel {

    JPanel upc;
    Network network;
    HospitalEnterprise hospitalEnterprise;
    InventoryOrganization inventoryOrg;

    /**
     * Creates new form ManageHospitalRoomsJPanel
     */
    public ManageHospitalRoomsJPanel(JPanel upc, Network network) {
        initComponents();
        this.upc = upc;
        this.network = network;

        populateComboBox1();
        populateComboBox2();
    }

    public void populateComboBox1() {
        hospitalJComboBox.removeAllItems();
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof HospitalEnterprise) {
                hospitalEnterprise = (HospitalEnterprise) e;
                for (Organization horg : e.getOrganizationDirectory().getOrganizationList()) {
                    HospitalOrganization temphorg = (HospitalOrganization) horg;
                    hospitalJComboBox.addItem(temphorg);
                }
            }
        }
        populateTable();
    }

    public void populateComboBox2() {
        hospitalJComboBox2.removeAllItems();
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof HospitalEnterprise) {
                hospitalEnterprise = (HospitalEnterprise) e;
                for (Organization horg : e.getOrganizationDirectory().getOrganizationList()) {
                    HospitalOrganization temphorg = (HospitalOrganization) horg;
                    hospitalJComboBox2.addItem(temphorg);
                }
            }
        }

    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) roomsJTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[2];

        HospitalOrganization temphorg = (HospitalOrganization) hospitalJComboBox.getSelectedItem();
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof InventoryEnterprise) {
                for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                    if (org instanceof InventoryOrganization) {
                        inventoryOrg = (InventoryOrganization) org;
                        for (SurgeryRoom sr : inventoryOrg.getSurgeryRoomDirectory().getRoomList()) {
                            if (sr.getHospital() == temphorg) {
                                row[0] = sr;
                                row[1] = sr.getRoomDescription();

                                dtm.addRow(row);
                            }
                        }
                    }
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hospitalJComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        roomNoJTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        hospitalJComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionJTextArea = new javax.swing.JTextArea();
        addJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();
        backjButton2 = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hospitalJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalJComboBoxActionPerformed(evt);
            }
        });
        add(hospitalJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 69, 155, -1));

        jLabel5.setText("Select Hospital:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, -1, -1));

        roomsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Room No.", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(roomsJTable);
        if (roomsJTable.getColumnModel().getColumnCount() > 0) {
            roomsJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 107, 690, 107));

        jLabel1.setText("Enter new Room No.:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 345, -1, -1));

        roomNoJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoJTextFieldActionPerformed(evt);
            }
        });
        add(roomNoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 136, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 255, 700, 10));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Create New Room:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 271, -1, -1));

        add(hospitalJComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 155, -1));

        jLabel6.setText("Select Hospital:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 307, -1, -1));

        jLabel3.setText("Enter Room Description:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        descriptionJTextArea.setColumns(20);
        descriptionJTextArea.setRows(5);
        jScrollPane2.setViewportView(descriptionJTextArea);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 179, 61));

        addJButton.setText("Add New Room");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Manage Surgery Rooms");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 11, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, -1, -1));

        backjButton2.setText("<<Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });
        add(backjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 524, -1, -1));

        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });
        add(removeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 221, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void roomNoJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoJTextFieldActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        try {
            HospitalOrganization temphorg = (HospitalOrganization) hospitalJComboBox2.getSelectedItem();
            SurgeryRoom sr = new SurgeryRoom();
            sr.setHospital(temphorg);
            sr.setRoomNo(Integer.parseInt(roomNoJTextField.getText()));
            sr.setRoomDescription(descriptionJTextArea.getText());

            inventoryOrg.getSurgeryRoomDirectory().getRoomList().add(sr);
            JOptionPane.showMessageDialog(null, "Room added.");
            populateTable();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid Values.");
            return;
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void hospitalJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalJComboBoxActionPerformed
        populateTable();
    }//GEN-LAST:event_hospitalJComboBoxActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        int selectedRow = (int) roomsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this room?", "Warning", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            SurgeryRoom sr = (SurgeryRoom) roomsJTable.getValueAt(selectedRow, 0);
            inventoryOrg.getSurgeryRoomDirectory().getRoomList().remove(sr);
        }

    }//GEN-LAST:event_removeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backjButton2;
    private javax.swing.JTextArea descriptionJTextArea;
    private javax.swing.JComboBox hospitalJComboBox;
    private javax.swing.JComboBox hospitalJComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeJButton;
    private javax.swing.JTextField roomNoJTextField;
    private javax.swing.JTable roomsJTable;
    // End of variables declaration//GEN-END:variables
}
