/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MaintenanceStaff;

import Business.Employee.MaintenanceEmployee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.InventoryEnterprise;
import Business.Inventory.IDevice;
import Business.Inventory.MaintenanceSchedule;
import Business.Inventory.Warehouse;
import Business.Network.Network;
import Business.Organization.InventoryOrganization;
import Business.Organization.MaintenanceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Aastha
 */
public class MaintenanceWorkAreaJPanel extends javax.swing.JPanel {

    JPanel upc;
    UserAccount account;
    Network network;
    MaintenanceOrganization morg;
    MaintenanceSchedule mSchedule;

    /**
     * Creates new form MaintenanceWorkAreaJPanel
     */
    public MaintenanceWorkAreaJPanel(JPanel upc, UserAccount account, Network network) {
        initComponents();
        this.upc = upc;
        this.account = account;
        this.network = network;
        mSchedule = new MaintenanceSchedule();
        nameJLabel.setText(account.getEmployee().toString());
        MaintenanceEmployee me = (MaintenanceEmployee) account.getEmployee();
        warehouseJLabel.setText(me.getWarehouse().toString());
        getMaintenanceOrganization();
        initializeMaintenanceSchedule();
    }

    public void getMaintenanceOrganization() {
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (ent instanceof InventoryEnterprise) {
                InventoryEnterprise iEnt = (InventoryEnterprise) ent;
                for (Organization organization : iEnt.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof MaintenanceOrganization) {
                        morg = (MaintenanceOrganization) organization;
                        if (!morg.getMaintenanceSchedule().getmSchedule().isEmpty()) {
                            morg.getMaintenanceSchedule().getmSchedule().clear();
                        }
                    }
                }
            }
        }
    }

    public void initializeMaintenanceSchedule() {
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (ent instanceof InventoryEnterprise) {
                InventoryEnterprise iEnt = (InventoryEnterprise) ent;
                for (Organization organization : iEnt.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof InventoryOrganization) {
                        InventoryOrganization iOrg = (InventoryOrganization) organization;
                        for (Warehouse w : iOrg.getWarehouseDirectory().getWarehouseList()) {
                            for (IDevice device : w.getListOfDevices().getDeviceList()) {
                                Calendar c = Calendar.getInstance();
                                c.setTime(device.getMaintenanceDetails().getMaintenanceDueDate());
                                if ((c.before(Calendar.getInstance()) || (c.getTime().equals(Calendar.getInstance())))) {
                                    morg.getMaintenanceSchedule().getmSchedule().add(device.getMaintenanceDetails());
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!morg.getMaintenanceSchedule().getmSchedule().isEmpty()) {
            JOptionPane.showMessageDialog(null, "There are devices with maintenance due.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewDevicesJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        warehouseJLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewDevicesJButton.setText("View devices due for Maintenance>>");
        viewDevicesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDevicesJButtonActionPerformed(evt);
            }
        });
        add(viewDevicesJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Welcome, ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameJLabel.setText("jLabel2");
        add(nameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 190, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Maintenance Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Warehouse: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, -1, -1));

        warehouseJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        warehouseJLabel.setText("jLabel4");
        add(warehouseJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 100, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewDevicesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDevicesJButtonActionPerformed
        RegularMaintenanceJPanel rmjp = new RegularMaintenanceJPanel(upc, morg.getMaintenanceSchedule(), account);
        upc.add("regularmaintenance", rmjp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_viewDevicesJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JButton viewDevicesJButton;
    private javax.swing.JLabel warehouseJLabel;
    // End of variables declaration//GEN-END:variables
}
